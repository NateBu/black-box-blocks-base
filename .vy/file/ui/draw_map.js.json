"draw_new_map = function(map,g,xscale,yscale) {\n\n  //for (var ii = 0; ii < map.shapes.length; ii++) {\n    //this.g.selectAll('g.shape_id'+poly.id).remove();\n    //var g = this.g.append('g')\n    //  \n    //  .attr('shape_id',poly.id,true);\n  //}\n    var colors = {'drivable':'blue','obstacle':'red','reference':'orange',\n              '\"drivable\"':'blue','\"obstacle\"':'red','\"reference\"':'orange'};\n    var thismap = g.selectAll('.id-'+map._id);\n    var mappolygons = null;\n    if (thismap.size() === 0) {\n      thismap = g.append('g').classed('id-'+map._id,true);\n      mappolygons = thismap.selectAll('polygon').remove()\n        .data(map._mapShapes)\n        .enter().append('polygon').style('fill',function(d,i) { \n          return colors[d._shapeType] || 'black';\n        })\n        .classed('mapshape',true)\n        .style('opacity',0.3)\n        .style('stroke','white');\n    } else {\n      mappolygons = thismap.selectAll('polygon');\n    }\n    \n    mappolygons.attr('points', function(d,i) { \n      return d._vertices.map(function(p) { return [xscale(p.x), yscale(p.y)]; });\n    });\n}\n/*\n    var self = this;\n    var color = this.polygonColor(poly);\n    this.g.selectAll('g.shape_id'+poly.id).remove();\n    var g = this.g.append('g')\n      .classed('shape_id'+poly.id,true)\n      .classed('shape',true)\n      .attr('shape_id',poly.id,true);\n    g.selectAll('polygon')\n      .data([poly])\n      .enter().append('polygon')\n        .attr('points', function(d,i) { \n          return d.vertices.map(function(p) { return [self.xScale(p[0]), self.yScale(p[1])]; });\n        })\n        .style('fill',color)\n        .on('dblclick', function(d,i) { \n          d.editing = !d.editing ; \n          var parent = d3.select(this.parentNode);\n          if (d.editing) {\n            // Add handles\n            self.polygonHandles(parent,d);\n          } else {\n            // Remove handles\n            parent.selectAll('circle').remove();\n          }\n        })\n        .style('stroke','white');\n    if (poly.editing) this.polygonHandles(g,poly);\n  },\n  */"