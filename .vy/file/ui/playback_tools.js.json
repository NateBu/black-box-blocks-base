"playback = {\n  playback_:{isplaying:true,percent:0,rate:1},\n\n  playback_rate:function(rate) {\n    this.playback_.rate = rate;\n  },\n  \n  playback_isplaying:function(isplaying) {\n    this.playback_.isplaying = isplaying;\n    return isplaying;\n  },\n  \n  playback_percent:function(percent) {\n    this.playback_.percent = percent;\n  },\n  \n  replay:function(parent,dataname,data_handler) {\n    // data must have a time array (e.g. data.time = [0,0.1,0.2,...])\n    // The index of the time will be passed back to data_handler\n    var tstart = Date.now();\n    var dt = 0.05; // (sec) 20 hz\n    var self = this;\n    var data = parent[dataname];\n    if (!data.hasOwnProperty('time')) {\n      console.log('Load a scenario before trying to playback!');\n      x3.set_playback_isplaying(false);\n      return;\n    }\n    var n = data.time.length;\n    if (n<1) return;\n    var prcnt = Math.max(0,Math.min(1,self.playback_.percent));\n    var ii = Math.round(prcnt*(n-1));\n    var t_total = data.time[n-1]-data.time[0];\n    parent[data_handler](ii);\n    if (self.playback_.isplaying && prcnt<1 && n>1) {\n      self.playback_.percent += (dt/t_total)*self.playback_.rate;\n      x3.set_playback_percent(self.playback_.percent);\n      var dt_ = Math.max(1,dt*1000 - (Date.now()-tstart));\n      setTimeout(function() {\n        self.replay(parent,dataname,data_handler);\n      },dt_)\n    } else if (self.playback_.isplaying) {\n      x3.set_playback_isplaying(false);\n    }\n  }\n}"