"surface_lock = function(x,y,dxdt,dydt,z,dzdx,dzdy) {\n    // Inputs:\n    // x = x position of vehicle (m)\n    // y = y position of vehicle (m)\n    // dxdt = x velocity of vehicle (m/s)\n    // dydt = y velocity of vehicle (m/s)\n    // z = z position of vehicle (m/s)\n    // dzdx = derivative of z position of surface with respect to x (dimensionless)\n    // dzdy = derivative of z position of surface with respect to y (dimensionless)\n    //\n    // Outputs:\n    // p = (x,y,z) position of vehicle (m)\n    // q = [roll,pitch,yaw] (rad)\n    var cross = function(a,b) {\n      return [a[1]*b[2]-a[2]*b[1] , a[2]*b[0]-b[2]*a[0] , a[0]*b[1]-b[0]*a[1]]\n    };\n    \n    var dzdt = dzdx*dxdt + dzdy*dydt;\n    var dpdt = [dxdt,dydt,dzdt];\n    \n    var uphigh = [dzdx,dzdy,-1];\n    var uplow = Math.sqrt(dzdx*dzdx+dzdy*dzdy+1);\n    var up = [-uphigh[0]/uplow, -uphigh[1]/uplow, -uphigh[2]/uplow];\n    var noselow = Math.sqrt(dxdt*dxdt+dydt*dydt+dzdt*dzdt);\n    var nose = [dpdt[0]/noselow,dpdt[1]/noselow,dpdt[2]/noselow];\n    var left = cross(up,nose);\n\n    // Assuming that the transformation from local to global is\n    // R = R_roll_x * R_pitch_y * R_yaw_z  (Global = R * Local)\n    // up = R*[0,0,1]';     left = R*[0,1,0]';     nose = R*[1,0,0]'\n    //   ... therefore: R = [nose,left,up]\n    //R = [nose',left',up'];\n    pitch = -Math.asin(nose[2]); //-Math.asin(R(3,1));\n    cp = Math.cos(pitch);\n    \n    if (cp===0 && pitch > 0) {\n        //a = R(1,2)/cp;\n        //b = R(1,3)/cp;\n        //roll = atan2(a,b);\n        roll = Math.atan2(left[0],up[0])\n        yaw = 0;\n    } else if (cp===0 && pitch < 0) {\n        //a = -R(1,2)/cp;\n        //b = -R(1,3)/cp;\n        //roll = atan2(a,b);\n        roll = Math.atan2(-left[0],-up[0])\n        yaw = 0;\n    } else {\n        // a = R(3,2)/cp;\n        // b = R(3,3)/cp;\n        roll = Math.atan2(left[2],up[2]); // atan2(a,b)\n        //a = R(2,1)/cp;\n        //b = R(1,1)/cp;\n        yaw = Math.atan2(nose[1],nose[0]); //atan2(a,b);\n    }\n    return {roll:roll,pitch:pitch,yaw:yaw,dzdt:dzdt}\n}\n//function R=Rz(x); R=[[cos(x),-sin(x),0];[sin(x),cos(x),0];[0,0,1]];\n//function R=Rx(x); R=[[1,0,0];[0,cos(x),-sin(x)];[0,sin(x),cos(x)]];\n//function R=Ry(x); R=[[cos(x),0,sin(x)];[0,1,0];[-sin(x),0,cos(x)]];"